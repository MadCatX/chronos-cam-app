<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>CamMainWindow</class>
 <widget class="QDialog" name="CamMainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>800</width>
    <height>480</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
    <horstretch>0</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="palette">
   <palette>
    <active>
     <colorrole role="Button">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
     <colorrole role="Base">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
     <colorrole role="Window">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
    </active>
    <inactive>
     <colorrole role="Button">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
     <colorrole role="Base">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
     <colorrole role="Window">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
    </inactive>
    <disabled>
     <colorrole role="Button">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
     <colorrole role="Base">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
     <colorrole role="Window">
      <brush brushstyle="SolidPattern">
       <color alpha="0">
        <red>0</red>
        <green>0</green>
        <blue>0</blue>
       </color>
      </brush>
     </colorrole>
    </disabled>
   </palette>
  </property>
  <property name="windowTitle">
   <string>Dialog</string>
  </property>
  <property name="styleSheet">
   <string notr="true">
    /* «begin clip from 'assets/whitelook-common.css' (86975a5a81eabb8b665385eb557555ea)» */
      /*
      === X General Styles for the CamApp ===
      
      CSS for all widgets across the cam app. These are defined in
      whitelook-common.css, and copied to each .ui file that needs
      them. Our .ui files *can't* have external resources but they
      *should* share this common css resource. Otherwise they will
      end up looking slightly different as their individual copies
      of the master style sheet diverge. To do this we synchronise
      regions of text with sync-clip-regions.py. It's only one-way
      for now, which means that if you edit the .ui stylesheet all
      the changes made to the clipped region will get overwritten.
      */
      
      
      * {
        font: 6.75pt "DejaVu Sans";
      }
      
      .QPushButton {
        border: 1px solid black;
        border-top-color: rgb(50,50,50);
        border-left-color: rgb(50,50,50);
        background: white;
        margin: 20px; /*Use margin to increase clickable area. Makes the whole thing much less fiddly.*/
      }
      
      .QPushButton:pressed {
        border: 1px solid rgb(50,50,50);
        border-top-color: black;
        border-left-color: black;
        background: rgb(240,240,240);
      }
      
      .QMessageBox .QPushButton {
        margin: 0;
        padding: 10px 60px;
      }
      
      .QComboBox {
        /*subcontrol-origin: padding; does nothing but mess up the drop-down button*/
        background: white;
        border: 1px solid black;
        /*margin: 10px; breaks drop-down; hard to fix*/
        padding-left: 10px;
      }
      QComboBox:on {
        /*when dropdown exists*/
      }
      
      .QComboBox QAbstractItemView { /*This is the drop-down menu.*/
        border: 1px solid black;
        color: black;
        selection-background-color: grey;
      }
      .QComboBox QAbstractItemView::item {
        padding: 10px;
        margin: 5px;
      }
      
      .QComboBox::drop-down {
        width: 40px;
        border: 0px solid black;
        border-left-width: 1px;
        background: white;
        color: black;
        max-height: 100px;
      }
      .QComboBox::drop-down:on {
        /*Stupid hack because the dropdown scrollbar *can't* be increased in width. It's off the width of the drop-down button by -1px. We can't just decrease the width of the drop-down button, because every other button we own is 40px instead of 39px. So. What we do is adjust the button size down when the drop-down is open, because that's the only time the off-by-one with QScrollBar is noticable, and you're distracted by the scrollbar then.*/
        padding-left: -1px;
      }
      .QComboBox::down-arrow {
        image: url(assets/images/wedge-down-enabled.png);
      }
      
      QScrollBar, QScrollBar:vertical, QScrollBar:horizontal {
        border-left: 1px solid black;
        /*width: 41px; /*This horribly breaks scrolling.*/
      }
      QScrollBar::handle:vertical {
        border: 1px solid black;
        border-radius: 0;
        background: white;
        min-height: 72px;
        image: url(assets/images/handle-bars.png);
        margin: -1px;
      }
      /* This remvoes the bottom button by setting the height to 0px */
      QScrollBar::add-line:vertical {
        height: 0px;
        subcontrol-position: bottom;
        subcontrol-origin: margin;
      }
      /* This remvoes the top button by setting the height to 0px */
      QScrollBar::sub-line:vertical {
        height: 0px;
        subcontrol-position: top;
        subcontrol-origin: margin;
      }
      
      
      
      QSpinBox { 
        border: 1px solid black;
        padding-right: 40px;
        margin: 10px;
        padding-left: 10px;
      }
      QSpinBox:disabled { 
        color: #969696;
      }
      QSpinBox::up-button { 
        subcontrol-position: right; 
        right: 40px; 
        image: url(assets/images/wedge-up-enabled.png);
      }
      QSpinBox::up-button:disabled { 
        image: url(assets/images/wedge-up-disabled.png);
      }
      QSpinBox::down-button { 
        subcontrol-position: right; 
        image: url(assets/images/wedge-down-enabled.png);
      }
      QSpinBox::down-button:disabled { 
        subcontrol-position: right; 
        image: url(assets/images/wedge-down-disabled.png);
      }
      QSpinBox::up-button, QSpinBox::down-button {
        border: 0px solid black;
        border-left-width: 1px;
        width: 40px; 
        height: 40px;
      }
      
      .CamLineEdit {
        border: 1px solid black;
        margin: 10px; /*This doesn't show up in Qt Designer, but it works in the app.*/
        padding-left: 10px;
      }
    /* «end clip» */
    
    
    /* === Screen-Specific Styles === */
    
    /*
      Open up a window for the camera preview.
      QWidget must be set to transparent background; there's some out-of-tree
      item that's drawing opaque over the preview window.
    */
    
    .QDialog { /*Let the background video show through the window.*/
      background: transparent;
    }
    
    #CamMainWindow &gt; .QPushButton { /*Don't give the debug buttons much padding – they're large enough already.*/
      margin: 10px;
    }
    
    #topBarBackground, #sideBarBackground {
      background: white;
      border: 1px solid black;
    }
    
    #topBar &gt; .QPushButton {
      margin: 0 0 20px 0;
    }
    
    #sideBar &gt; .QPushButton {
      margin: 0 0 0 20px;
    }
    
    #sideBar &gt; #cmdPlay {
      margin: 0 0 20px 20px;
    }
    
    #sideBar &gt; #cmdRec {
      /*Draw red rec. button.*/
      background: qradialgradient(cx:0.5, cy:0.5, fx:0.5, fy:0.5 radius:1,
        stop:0.369 rgb(255,55,55), /*Recording Button Red*/
        stop:0.380 rgb(20,20,20), /*.002 transition width gives a decently antialiased line.*/
        stop:0.391 transparent,
        stop:0.469 transparent,
        stop:0.480 rgb(20,20,20),
        stop:0.491 transparent ); /*Leave some room for antialiasing along the edges of the circle, especially around the axis.*/
      border: 0px solid black; /*This doesn't work quite right, it's dashed around the shallow curves near the axis of the circle.*/
      border-radius: 40%; /*I believe this is getting interpreted -- incorrectly -- as a px value, which also -- incorrectly -- can't be more than half the width/height of the button or it gets ignored.*/
      margin: 10px;
    }
    
    #expSlider {
      margin: 0;
    }
    
    QSlider::groove:vertical {
      /*This slider has an extra-large hitbox, so it's easy to tap. This is done by giving it a very large, invisible margin. A small graphic, handle-bars.png, draws the visual slider for us. Note that the real area of the slider, and it's QWidget holders, must be as large as the hitbox.*/
      border: 1px solid black;
      width: 20px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
      background: transparent;
      margin: 20px;
      border-radius: 10px;
      padding: 0px;
     } 
    QSlider::handle:vertical {
      background: rgba(128,128,128,0); /*Add some opacity to see the slider's actual hitbox.*/
      image: url(assets/images/handle-bars.png);
      border: 40px solid transparent;
      border-left-width: 40px;
      height: 90px;
      margin: -60px; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
      margin-left: -60px;
      border-radius: 0px;
     }
   </string>
  </property>
  <widget class="QPushButton" name="cmdClose">
   <property name="geometry">
    <rect>
     <x>490</x>
     <y>110</y>
     <width>111</width>
     <height>61</height>
    </rect>
   </property>
   <property name="text">
    <string>Close</string>
   </property>
  </widget>
  <widget class="QPushButton" name="cmdDebugWnd">
   <property name="geometry">
    <rect>
     <x>490</x>
     <y>160</y>
     <width>111</width>
     <height>61</height>
    </rect>
   </property>
   <property name="text">
    <string>Debug</string>
   </property>
  </widget>
  <widget class="QLabel" name="lblCurrent">
   <property name="geometry">
    <rect>
     <x>410</x>
     <y>400</y>
     <width>181</width>
     <height>71</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>DejaVu Sans</family>
     <pointsize>7</pointsize>
     <weight>50</weight>
     <italic>false</italic>
     <bold>false</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255)</string>
   </property>
   <property name="text">
    <string>TextLabel</string>
   </property>
   <property name="alignment">
    <set>Qt::AlignBottom|Qt::AlignRight|Qt::AlignTrailing</set>
   </property>
  </widget>
  <widget class="QPushButton" name="cmdDPCButton">
   <property name="geometry">
    <rect>
     <x>490</x>
     <y>60</y>
     <width>111</width>
     <height>61</height>
    </rect>
   </property>
   <property name="text">
    <string>DPC</string>
   </property>
  </widget>
  <widget class="QWidget" name="topBar" native="true">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>801</width>
     <height>71</height>
    </rect>
   </property>
   <widget class="QPushButton" name="cmdIOSettings">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>181</width>
      <height>71</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="text">
     <string>Trigger/IO</string>
    </property>
   </widget>
   <widget class="QPushButton" name="cmdDelaySettings">
    <property name="geometry">
     <rect>
      <x>180</x>
      <y>0</y>
      <width>181</width>
      <height>71</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="text">
     <string>Trigger Delay</string>
    </property>
   </widget>
   <widget class="QPushButton" name="cmdUtil">
    <property name="geometry">
     <rect>
      <x>360</x>
      <y>0</y>
      <width>181</width>
      <height>71</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="text">
     <string>Util</string>
    </property>
   </widget>
   <widget class="QPushButton" name="cmdRecSettings">
    <property name="geometry">
     <rect>
      <x>540</x>
      <y>0</y>
      <width>181</width>
      <height>71</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="text">
     <string>Record Settings</string>
    </property>
   </widget>
   <widget class="QWidget" name="topBarBackground" native="true">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>801</width>
      <height>51</height>
     </rect>
    </property>
   </widget>
   <widget class="QLabel" name="label">
    <property name="geometry">
     <rect>
      <x>722</x>
      <y>0</y>
      <width>81</width>
      <height>51</height>
     </rect>
    </property>
    <property name="text">
     <string>🔋</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <zorder>topBarBackground</zorder>
   <zorder>cmdIOSettings</zorder>
   <zorder>cmdDelaySettings</zorder>
   <zorder>cmdUtil</zorder>
   <zorder>cmdRecSettings</zorder>
   <zorder>label</zorder>
  </widget>
  <widget class="QWidget" name="sideBar" native="true">
   <property name="geometry">
    <rect>
     <x>550</x>
     <y>50</y>
     <width>251</width>
     <height>431</height>
    </rect>
   </property>
   <widget class="QPushButton" name="cmdFPNCal">
    <property name="geometry">
     <rect>
      <x>90</x>
      <y>0</y>
      <width>161</width>
      <height>61</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="text">
     <string>Black Cal</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="chkFocusAid">
    <property name="geometry">
     <rect>
      <x>120</x>
      <y>60</y>
      <width>131</width>
      <height>61</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="autoFillBackground">
     <bool>false</bool>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox::indicator {
     width: 28px;
     height: 28px;
}


</string>
    </property>
    <property name="text">
     <string>Focus Aid</string>
    </property>
   </widget>
   <widget class="QPushButton" name="cmdWB_2">
    <property name="geometry">
     <rect>
      <x>90</x>
      <y>120</y>
      <width>161</width>
      <height>61</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="text">
     <string>Zebras</string>
    </property>
   </widget>
   <widget class="QPushButton" name="cmdWB">
    <property name="geometry">
     <rect>
      <x>90</x>
      <y>180</y>
      <width>161</width>
      <height>61</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="text">
     <string>Set White
Balance</string>
    </property>
   </widget>
   <widget class="QPushButton" name="cmdPlay">
    <property name="enabled">
     <bool>false</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>90</x>
      <y>240</y>
      <width>161</width>
      <height>81</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="text">
     <string>Save &amp;&amp;
Play</string>
    </property>
   </widget>
   <widget class="QWidget" name="sideBarBackground" native="true">
    <property name="geometry">
     <rect>
      <x>51</x>
      <y>0</y>
      <width>201</width>
      <height>441</height>
     </rect>
    </property>
    <property name="layoutDirection">
     <enum>Qt::RightToLeft</enum>
    </property>
   </widget>
   <widget class="QLabel" name="lblExp">
    <property name="geometry">
     <rect>
      <x>50</x>
      <y>1</y>
      <width>61</width>
      <height>31</height>
     </rect>
    </property>
    <property name="text">
     <string>Exp.</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QPushButton" name="cmdRec">
    <property name="geometry">
     <rect>
      <x>120</x>
      <y>305</y>
      <width>121</width>
      <height>121</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>DejaVu Sans</family>
      <pointsize>7</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="autoFillBackground">
     <bool>false</bool>
    </property>
    <property name="text">
     <string>Rec.</string>
    </property>
   </widget>
   <widget class="QSlider" name="expSlider">
    <property name="geometry">
     <rect>
      <x>10</x>
      <y>30</y>
      <width>143</width>
      <height>401</height>
     </rect>
    </property>
    <property name="sizePolicy">
     <sizepolicy hsizetype="Fixed" vsizetype="Expanding">
      <horstretch>0</horstretch>
      <verstretch>0</verstretch>
     </sizepolicy>
    </property>
    <property name="singleStep">
     <number>1</number>
    </property>
    <property name="value">
     <number>0</number>
    </property>
    <property name="orientation">
     <enum>Qt::Vertical</enum>
    </property>
   </widget>
   <zorder>sideBarBackground</zorder>
   <zorder>expSlider</zorder>
   <zorder>lblExp</zorder>
   <zorder>cmdFPNCal</zorder>
   <zorder>chkFocusAid</zorder>
   <zorder>cmdWB_2</zorder>
   <zorder>cmdWB</zorder>
   <zorder>cmdPlay</zorder>
   <zorder>cmdRec</zorder>
  </widget>
  <zorder>topBar</zorder>
  <zorder>sideBar</zorder>
  <zorder>lblCurrent</zorder>
  <zorder>cmdDPCButton</zorder>
  <zorder>cmdClose</zorder>
  <zorder>cmdDebugWnd</zorder>
 </widget>
 <resources/>
 <connections/>
</ui>
